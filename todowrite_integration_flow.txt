╔══════════════════════════════════════════════════════════════════════════════╗
║                    TodoWrite Integration Architecture                         ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────────────────┐
│ 1. TOOL EXECUTION (Claude Code Session)                                     │
└─────────────────────────────────────────────────────────────────────────────┘
                                    │
                                    ├─► pre_tool_use.jsonl
                                    │   {
                                    │     "tool": "TodoWrite",
                                    │     "timestamp": "2025-10-20T...",
                                    │     "parameters": {
                                    │       "todos": [
                                    │         {
                                    │           "content": "Task description",
                                    │           "status": "in_progress",
                                    │           "activeForm": "Working on task..."
                                    │         }
                                    │       ]
                                    │     }
                                    │   }
                                    │
                                    └─► post_tool_use.jsonl
                                        (No parameters logged for privacy)

┌─────────────────────────────────────────────────────────────────────────────┐
│ 2. FRONTEND - Task View Terminal Display                                    │
└─────────────────────────────────────────────────────────────────────────────┘

   Terminal View (Collapsed):
   ┌──────────────────────────────────────────────────────────────────────┐
   │ 1  23:45:10  📖 Read     read package.json (2.1 KB)         [Copy]  │
   │ 2  23:45:11  📝 Write    write server.py (15.3 KB)          [Copy]  │
   │ 3  23:45:12  ✅ TodoWrite  Updated todo list (7 items) ▸            │ ◄── Clickable
   │ 4  23:45:13  ▶️ Bash     $ npm test                          [Copy]  │
   └──────────────────────────────────────────────────────────────────────┘
                                    │
                        Click on TodoWrite entry
                                    │
                                    ▼

   Terminal View (Expanded):
   ┌──────────────────────────────────────────────────────────────────────┐
   │ 1  23:45:10  📖 Read     read package.json (2.1 KB)         [Copy]  │
   │ 2  23:45:11  📝 Write    write server.py (15.3 KB)          [Copy]  │
   │ 3  23:45:12  ✅ TodoWrite  Updated todo list (7 items) ▾            │
   │ ┌──────────────────────────────────────────────────────────────────┐ │
   │ │  ○  Explore codebase structure                                   │ │
   │ │  ○  Understand tool telemetry                                    │ │
   │ │  ◐  Create backend API endpoint                                  │ │
   │ │      Creating backend API endpoint...                            │ │
   │ │  ●  Design integration approach                                  │ │
   │ │  ●  Locate task view component                                   │ │
   │ │                                                                   │ │
   │ │  Total: 7 • Pending: 3 • In Progress: 1 • Completed: 3          │ │
   │ └──────────────────────────────────────────────────────────────────┘ │
   │ 4  23:45:13  ▶️ Bash     $ npm test                          [Copy]  │
   └──────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│ 3. API REQUEST FLOW                                                          │
└─────────────────────────────────────────────────────────────────────────────┘

   Browser                    Flask Server                  File System
      │                           │                              │
      │  GET /api/tasks/         │                              │
      │  {task_id}/              │                              │
      │  todowrite-details       │                              │
      ├─────────────────────────►│                              │
      │                           │  Read pre_tool_use.jsonl    │
      │                           ├─────────────────────────────►│
      │                           │                              │
      │                           │  Parse TodoWrite entries    │
      │                           │◄─────────────────────────────┤
      │                           │                              │
      │  JSON Response            │                              │
      │◄─────────────────────────┤                              │
      │  {                        │                              │
      │    "todowrite_calls": [   │                              │
      │      {                    │                              │
      │        "timestamp": "...", │                              │
      │        "todos": [...]     │                              │
      │      }                    │                              │
      │    ]                      │                              │
      │  }                        │                              │
      │                           │                              │

┌─────────────────────────────────────────────────────────────────────────────┐
│ 4. STATUS INDICATORS                                                         │
└─────────────────────────────────────────────────────────────────────────────┘

   Status: pending           │  Status: in_progress       │  Status: completed
   ┌──────────────────────┐  │  ┌──────────────────────┐  │  ┌────────────────┐
   │ ○  Task description  │  │  │ ◐  Task description  │  │  │ ●  Task desc   │
   │     (gray)           │  │  │     Actively working │  │  │     (green)    │
   └──────────────────────┘  │  │     (blue, italic)   │  │  └────────────────┘
                             │  └──────────────────────┘  │

┌─────────────────────────────────────────────────────────────────────────────┐
│ 5. CACHING STRATEGY                                                          │
└─────────────────────────────────────────────────────────────────────────────┘

   First Click:              Second Click:               Modal Close:
   Load from API        ──►  Load from cache       ──►   Clear cache
   
   todoWriteCache = {
     "2025-10-20T23:45:12": { ... },  // Keyed by timestamp
     "2025-10-20T23:46:05": { ... }
   }

╔══════════════════════════════════════════════════════════════════════════════╗
║  Key Files Modified                                                           ║
╠══════════════════════════════════════════════════════════════════════════════╣
║  • monitoring_server.py:237-287   - New API endpoint                         ║
║  • dashboard.html:1183-1308       - CSS styles                               ║
║  • dashboard.html:2437-2542       - Terminal line modifications              ║
║  • dashboard.html:2635-2740       - Toggle & render functions                ║
╚══════════════════════════════════════════════════════════════════════════════╝
